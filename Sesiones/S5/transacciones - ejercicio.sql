-- ########## Ejercicio Transacciones - Pagina 14 #############
-- Creadno la tabla PROVEEDOR
/* CREATE TABLE PROVEEDOR (
    COD_PRV CHAR(5) PRIMARY KEY,
    RSO_PRV VARCHAR(80),
    DIR_PRV VARCHAR(100),
    TEL_PRV CHAR(15),
    COD_DIS CHAR(5),
    REP_PRV VARCHAR(80)
); */
-- Validar el procedimiento almacenado
IF OBJECT_ID('SP_NUEVOPROVEEDOR') IS NOT NULL
BEGIN
    DROP PROCEDURE SP_NUEVOPROVEEDOR
END
GO

-- Creando el procedimiento
CREATE PROCEDURE SP_NUEVOPROVEEDOR(
    @COD CHAR(5),
    @RSO VARCHAR(80),
    @DIR VARCHAR(100),
    @TEL CHAR(15),
    @DIS CHAR(5),
    @REP VARCHAR(80)
)
AS
BEGIN
    BEGIN TRANSACTION T_PROVEEDOR
    INSERT INTO PROVEEDOR VALUES (@COD, @RSO, @DIR, @TEL, @DIS, @REP)

    IF @@ERROR = 0
    BEGIN
        PRINT 'PROVEEDOR REGISTRADO CON EXITO'
        COMMIT TRAN T_PROVEEDOR
    END
    ELSE
    BEGIN
        PRINT 'OCURRIO UN ERROR AL INSERTAR'
        ROLLBACK TRAN T_PROVEEDOR
    END
END
GO


-- Prueba:
SP_NUEVOPROVEEDOR 'PR21', 'TAI LOY', 'AV. UNIVERSITARIA','6544555', 'D02', 'JUAN FUIGUEROA'

-- *************** Tambi√©n se puede usar la siguiente sentencia BEGIN TRY y BEGIN CATCH.  *************** 

CREATE PROCEDURE SP_NUEVOPROVEEDOR2(
    @COD CHAR(5),
    @RSO VARCHAR(80),
    @DIR VARCHAR(100),
    @TEL CHAR(15),
    @DIS CHAR(5),
    @REP VARCHAR(80)
)
AS
BEGIN
    BEGIN TRANSACTION T_PROVEEDOR
    BEGIN TRY
        INSERT INTO PROVEEDOR VALUES (@COD, @RSO, @DIR, @TEL, @DIS, @REP)
        COMMIT TRAN T_PROVEEDOR
        PRINT 'PROVEEDOR REGISTRADO CON EXITO'
    END TRY
    BEGIN CATCH
        PRINT 'OCURRIO UN ERROR AL INSERTAR'
        ROLLBACK TRAN T_PROVEEDOR
    END CATCH
END
GO
SP_NUEVOPROVEEDOR2 'PR21', 'TAI LOY', 'AV. UNIVERSITARIA','6544555', 'D02', 'JUAN FUIGUEROA'
